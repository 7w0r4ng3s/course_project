2. Computer Literacy. *,"Introduction to how computers work and how to use them. Topics covered include network information systems, text editors, formatting, file and directory system, spreadsheets and databases. Computers as symbol manipulation devices. Introduction to programming concepts and computer languages. Impact of computers on society. Designed for students with little or no experience using computers. Preference is given to students who have not taken other computer engineering or computer science courses. Students cannot receive credit for this course and Computer Engineering 3. (General Education Code(s): PE-T.) The Staff "
5C. Introduction to Programming in C/C++. *,"Students learn programming and documentation skills as well as algorithmic problem-solving and programming methodologies. Introduces computers, compilers, and editors. Students write small to medium-sized programs. No prior programming experience required, but a mathematics background at the pre-calculus level is assumed. This course and courses 5J and 5P cover similar concepts, but use different programming languages. This course is recommended for students that have a specific desire or need to learn C/C++; others are encouraged to consider taking course 5P or 5J which use languages that provide a gentler introduction to programming. (General Education Code(s): MF.) D. Long "
"5J. Introduction to Programming in Java. F,W,S","Introduces programming in Java for students who have no prior programming experience. Students learn programming and documentation skills, as well as algorithmic problem-solving, and programming methodologies. Introduces computers, compilers, and editors. Students write small to medium-sized programs. This course and courses 5C and 5P cover similar concepts, but use different programming languages. Because 5J followed by course 11 is a two-quarter alternative to the accelerated course 12A/L, engineering majors and students planning on continuing the programming sequence are encouraged to take 5J rather than 5C or 5P. Students may not receive credit for 5J taken concurrently or subsequently to course 12A, 12B, or Computer Engineering 13. (General Education Code(s): MF.) The Staff, D. Bailey, F. Nawab, D. Helmbold, P. Tantalo"
"5P. Introduction to Programming in Python. F,W,S","Introduces programming in Python, a high-level programming language used in the physical and social sciences and for Internet scripting. Students learn programming and documentation skills, as well as algorithmic problem-solving, coding, and debugging methodologies. Students write programs to solve sample problems drawn from a wide range of disciplines, primarily in the sciences. No prior programming experience is required, but a mathematics background at the pre-calculus level is assumed. This course and courses 5C and 5J cover similar concepts, but use different programming languages. Students may not receive credit for course 5P after receiving credit for course 11, 12A, or Computer Engineering 13. Students may not enroll in or receive credit for course 5P after receiving credit with a 'C' or better in course 11, 12A, or Computer Engineering 13. (General Education Code(s): MF.) The Staff, P. Tantalo, P. Alvaro, D. Long, E. Miller"
10. Introduction to Computer Science. F,"An overview of the theory, foundations, and practice of computer science with emphasis on what computers can and cannot do, now and in the future. Topics include algorithms and data, correctness and efficiency of algorithms, hardware, programming languages, limitations of computation, applications, and social issues. No programming skills are required as a prerequisite. Major concepts and open problems in computer science are presented without reliance on sophisticated mathematical tools. Students cannot receive credit for this course after completing course 12B. (General Education Code(s): MF.) The Staff, M. Walker, D. Achlioptas, P. Tantalo"
"11. Intermediate Programming. F,W,S","Continuation of course 5J. Covers basic object-oriented programming, event-driven programming, graphical user interface (GUI) creation, recursion, two-dimensional arrays. The two-quarter sequence courses 5J and 11 cover in two quarters the same material as the accelerated introductory course and lab 12A/L cover in one quarter. Students cannot receive credit this course and course 12A. Prerequisite(s): course 5J, and Mathematics 3 or 11A or 19A or Applied Mathematics and Statistics 3 or Applied Mathematics and Statistics/Economics 11A or a score of 400 or higher on the mathematics placement examination (MPE). (General Education Code(s): MF.) The Staff, N. Norouzi, P. Tantalo"
"12A. Introduction to Programming (Accelerated). F,W,S","Accelerated introduction to programming. Students write medium-sized programs. Topics include: functions; conditionals and loops; classes; event-driven programming and graphic user interfaces (GUIs); recursion; and arrays. Students who have no or very limited programming experience should consider courses 5J and 11 which cover the same material in two quarters. Students may not receive credit for both this course and course 11. Some prior programming experience in a language such as C, C++, Java, or C# strongly recommended. Prerequisite(s): Mathematics 3 or 11A or 19A or Applied Mathematics and Statistics 3 or Applied Mathematics and Statistics/Economics 11A, or a score of 400 or higher on the mathematics placement examination (MPE). Concurrent enrollment in 12L required. The Staff, D. Bailey, W. Mackey, N. Norouzi, C. Flanagan, A. Pang, D. Helmbold, D. Long"
"12B. Introduction to Data Structures. F,W,S","Teaches students to implement common data structures and the algorithms associated with each data structure, through progressively difficult exercises. Topics include big ""O"" notation; pointers, recursion (induction), and dynamic allocation; linked lists and list processing; stacks, queues, binary trees and binary search trees; simple sorting techniques and simple search techniques. Students will gain a working knowledge of the elements of the Java and C programming languages. Prior experience with Unix is assumed. Prerequisite(s): course 11 or 12A or Computer Engineering 13. Concurrent enrollment in course 12M is required. (General Education Code(s): MF.) The Staff, P. Tantalo, S. Comandur, D. Long, W. Mackey"
"12L. Computer Programming Laboratory (2 credits). F,W,S","Laboratory sequence complementing topics taught in course 12A by providing training and exposure to several software development tools and practices not covered in course 12A. In addition, the lab provides an initial exposure to a second programming language to reinforce concepts from course 12A. Prerequisite(s): Concurrent enrollment in course 12A is required. The Staff, D. Bailey, W. Mackey, D. Helmbold, C. Flanagan, A. Pang, D. Long"
"12M. Data Structures Laboratory (2 credits). F,W,S","Complements course 12B, gaining additional competence with a number of important software development tools, languages, and techniques. Included are advanced Unix features and utilities such as grep, find, diff, the shell, and pipes; C programs utilizing I/O, arrays, pointers, and structures; a scripting language to perform simple text and file manipulation; and the make utility. Concurrent enrollment in course 12B is required. The Staff, P. Tantalo, S. Comandur, D. Long, W. Mackey"
13H. Introduction to Programming and Data Structures (Honors). *,"Provides an accelerated introduction to programming and data structures. Includes a review of basic programming, including loop and conditional control structures, procedures and parameter passing, and arrays. Course goes on to cover the same material as course 12B. Students cannot receive credit for this course and course 12A or 12B. Prerequisite(s): Students must have completed a high school or college-level programming course in Java, C, or C++. An entrance examination is given to ascertain programming level; enrollment is contingent on passing this examination. Concurrent enrollment in course 13L is required. D. Long "
13L. Introduction to Programming and Data Structures Laboratory (2 credits). *,"Provides an accelerated introduction to the practical aspects of programming and data structures. Covers three areas: 1) common programming tools, including Unix commands, compilers and linkers, editors, debuggers, and Makefiles; 2) basic programming techniques, including design, testing, and debugging; and 3) C programming, focusing on the major differences between C and Java. Previous or concurrent enrollment in course 13H is required. Prerequisite(s): Students must have completed a high school or college-level programming course in Java, C, or C++. An entrance examination is given to ascertain programming level; enrollment is contingent on passing this examination. Concurrent enrollment in course 13H is required. D. Long "
17. Social Networks. *,"Introduction to social networks and game theory. Topics include the structure of social networks; the world wide web; the flow of information and behavior through networks; and the principles behind modern web search and search-ad placement. Prerequisite(s): Mathematics 3 or 11A; or Applied Mathematics and Statistics 2 or 3 or 6 or 11A or 15A; or Economics 11A; or score on math placement exam of 31 or higher. (General Education Code(s): SR.) P. Kolaitis, L. Getoor, D. Achlioptas"
60M. Scientific Computation with Matlab and Maple. *,"Basic concepts from calculus visualized using Matlab and Maple; plotting data and functions, integration, differentiation, limits; solving systems of equation; linear regression; and example applications from science and engineering. Prerequisite(s): Mathematics 19B, or 20B, or by consent of instructor. M. Warmuth "
80B. Systems and Simulation. *,"An introduction to systems analysis as an approach to understanding and solving complex problems. The use of simulation as an aid in this problem solving. Examples are taken from ecology, economics, physics, computer science, and other fields. Intended as a generally accessible undergraduate course in which students can develop and explore computer simulation models matched to their individual interests. The Staff "
80G. Introduction to Unix. *,"Introduction to computing, the Internet, and the World Wide Web through the language of the Unix operating system. Oriented to the beginner, the course presupposes no previous acquaintance with any particular sort of computer. It covers the basic concepts of text editing and formatting, writing Web pages in basic HTML, and promotes a rigorous understanding of Unix commands and shell scripts. Views communication with a computer as a matter of learning a few simple though powerful languages. The Staff "
80J. Technology Targeted at Social Issues. *,"Introduces the idea that engineering can be a means for addressing social issues. Case studies and guest speakers. Issues might include: economic development, privacy, activism, safe drinking water, inexpensive shelters, sustainable energy, education, and waste disposal. (General Education Code(s): PE-T.) J. Davis, S. Lodha"
80L. Social Data Analytics and Visualization. *,"Course examines: social data analytics--veracity, consistency, uncertainty, volume; statistical computation--misuse, bias, dispersion, correlation, regressions, differential scales, normal distributions, factor and cluster analysis, extrapolation, inference, simple programming; visual representations--communication, critique and design of infographics; applications--environment, energy, economics, education, empowerment. (General Education Code(s): SR.) S. Lodha "
80S. From Software Innovation to Social Entrepreneurship. *,"Emerging software innovations with emphasis on social software. Web 2.0 companies and services. Software that has social impact in a global context. Entrepreneurial plan including social, economic, and innovation value. Final group project on innovative software design and entrepreneurship plan. (General Education Code(s): PE-T.) S. Lodha "
80V. Creating Virtual Worlds on the Web. *,"Project-oriented course about creating and publishing interactive 3D content on the web. Focuses on the creation of static and dynamic objects, such as characters, terrain, accessories, and works of art. Also covers inclusion of animation and sound effects with these objects. The objects created can be used in a stand-alone setting (e.g., a 3D document) or incorporated into existing virtual worlds (e.g., as part of a level design in a computer game or assets in massively multiplayer online games). Uses 3D authoring tools (pending availability of resources) like VRML, Second Life, Alice, and/or Acrobat 3D. (Formerly VRML 3D Worlds on the Web.) (General Education Code(s): PR-C.) A. Pang "
"94. Group Tutorial. F,W,S",Provides a means for a small group of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency. May be repeated for credit. The Staff 
"94F. Group Tutorial (2 credits). F,W,S",Provides a means for a small group of students to study a particular topic in consultation with a faculty sponsor. Students submit petition to sponsoring agency. May be repeated for credit. The Staff 
"99. Tutorial. F,W,S",Students submit petition to sponsoring agency. May be repeated for credit. The Staff 
"99F. Tutorial (2 credits). F,W,S",Students submit petition to sponsoring agency. May be repeated for credit. The Staff
