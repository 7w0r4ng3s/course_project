"101. Algorithms and Abstract Data Types. F,W,S","Studies basic algorithms and their relationships to common abstract data types. Covers the notions of abstract data types and the distinction between an abstract data type and an implementation of that data type. The complexity analysis of common algorithms using asymptotic (big ""O"") notation is emphasized. Topics include sorting and searching techniques, basic graph algorithms, and algorithm design techniques. Abstract data types covered include priority queues, dictionaries, disjoint sets, heaps, balanced trees, and hashing. Familiarity with C, Java, and Unix is assumed. Prerequisite(s): course 12B or 13H; CMPE 16 or 16H; MATH 11B or 19B or 20B; and one course from the following: MATH 21, 22, 23A, AMS 10, or AMS 131. The Staff, P. Tantalo, S. Comandur, A. Van Gelder, D. Helmbold, M. Warmuth"
"102. Introduction to Analysis of Algorithms. F,W,S","Methods for the systematic construction and mathematical analysis of algorithms. Order notation, the RAM model of computation, lower bounds, and recurrence relations are covered. The algorithm design techniques include divide-and-conquer, branch and bound, and dynamic programming. Applications to combinatorial, graph, string, and geometric algorithms. Prerequisite(s): course 101. The Staff, M. Warmuth, A. Van Gelder, A. Guha Thakurta, D. Helmbold, D. Achlioptas, S. Lodha"
"104A. Fundamentals of Compiler Design I. F,S","An introduction to the basic techniques used in compiler design. Topics include compiler structure, symbol tables, regular expressions and languages, finite automata, lexical analysis, context-free languages, LL(1), recursive descent, LALR(1), and LR(1) parsing; and attribute grammars as a model of syntax-directed translation. Students use compiler building tools to construct a working compiler. Prerequisite(s): course 101 and Computer Engineering 12 and 12L. W. Mackey "
104B. Fundamentals of Compiler Design II. *,"Advanced study of compiler implementation. Topics include compiler structure back end, run-time environments, storage management, garbage collection, register allocation, code generation, basic blocks, control flow, data flow, local and global optimization, interpretation, and machine-code generation. Students may not receive credit for this course and course 204. Taught in conjunction with course 204. Prerequisite(s): course 104A. W. Mackey "
105. Systems Programming. *,"Covers fundamentals of systems programming including standard tools, shell programming, file I/O, files and directories, system data files and information, Unix processes, process control, synchronization, signals, event-driven programming, terminal I/O, daemons, interprocess communication, basic network programming, and basic user-interface programming. Prerequisite(s): course 101 and Computer Engineering 12 and 12L. Enrollment is restricted to School of Engineering majors. The Staff, D. Long, E. Miller"
107. Open Source Programming. W,"Presents an opportunity to participate in Linux Kernel development--one of the preeminent open source projects. Through community involvement, students accelerate comprehension of computer science fundamentals and display their understanding and experience relevant to other programming projects. Prerequisite(s): course 101 and Computer Engineering 12 and 12L. Enrollment restricted to School of Engineering majors. C. Maltzahn, The Staff"
"109. Advanced Programming. F,W,S","An introduction to object-oriented techniques of software development including data abstraction, inheritance, polymorphism, and object-oriented design. Extensive practice using a computer to solve problems, including construction of graphical user interfaces and a multithreaded client/server applications. Prerequisite(s): course 12B/M or 13H. W. Mackey, The Staff"
"111. Introduction to Operating Systems. F,W,S","Fundamental principles of operating systems: process synchronization, deadlocks, memory management, resource allocation, scheduling, storage systems, and study of several operating systems. A major programming project will be required. Prerequisite(s): course 101, and Computer Engineering 110 or Computer Engineering 112. The Staff, E. Miller, F. Nawab, D. Long, P. Alvaro, W. Mackey"
"112. Comparative Programming Languages. F,W,S","Covers several programming languages and compares styles, philosophy, and design principles. Principles underlying declarative, functional, and object-oriented programming styles are studied. Students write programs emphasizing each of these techniques. Prerequisite(s): course 101 or 109. W. Mackey, D. Long, O. Arden, A. Van Gelder, C. Flanagan"
113. Parallel and Concurrent Programming. *,"Introduction to parallel and concurrent programming. Topics include: types of parallel computers and programming platforms; design, implementation, and optimization of programs for parallel and multicore processors; basic and advanced programming techniques; performance analysis and load balancing; and selected parallel algorithms. (Also offered as Computer Engineering 113. Students cannot receive credit for both courses.) Prerequisite(s): Computer Engineering 12 and 12L and Computer Science 101. Computer Engineering 110 or 112 recommended. J. Renau Ardevol, E. Miller"
115. Introduction to Software Engineering. F,"Emphasizes the characteristics of well-engineered software systems. Topics include requirements analysis and specification, design, programming, verification and validation, maintenance, and project management. Practical and research methods are studied. Imparts an understanding of the steps used to effectively develop computer software. (Formerly Software Methodology.) Prerequisite(s): satisfaction of the Entry Level Writing and Composition requirements and course 101. The Staff, J. Whitehead, N. Norouzi, L. Werner, R. Jullig, C. Flanagan"
116. Software Design Project. W,"Students in teams specify, design, construct, test, and document a complete software system in a specialized application domain. Class time is spent in technical discussions and ongoing design reviews. A formal presentation and demonstration of each project is required. An organizational meeting will be held during the preceding quarter. Projects may be drawn from industry and campus research groups. Prerequisite(s): course 115. (General Education Code(s): PR-E.) J. Whitehead, R. Jullig, L. Werner, L. De Alfaro"
117. Software Design Project II. S,"Continuation of course 116. Students work in teams to develop, test, document, and deploy a substantial software project. Teams give a formal presentation and demonstration of each project. Prerequisite(s): course 116. The Staff, J. Whitehead, R. Jullig, L. Werner, L. De Alfaro"
119. Software for Society. W,"Provides experience with applying computing to social issues. Case studies on multiple issues. For example: privacy, copyright, voting, education, poverty, energy, activism. Team project in which students develop software to address a pre-identified need of a global or local non-profit. Prerequisite(s): course 101. (General Education Code(s): PE-T.) J. Davis, S. Lodha"
"121. Mobile Applications. F,S","Introduces programming and application development for mobile devices. Covers the SDK and main programming platforms available on mobile devices, methodologies for developing native applications, division of computation between the mobile platform and servers, and mobile-to-server communications. Introduces platforms based on JavaScript and HTML5 for the development of applications that are portable across platforms. Students develop components of applications, leading to fully functional applications by the end of the course. Course based on emulators and SDK tools, so ownership of a cellphone/tablet is not required for the course. Prerequisite(s): courses 12B and 12M. The Staff, N. Norouzi, L. De Alfaro"
"122. Computer Security. W,S","Introduction to computer security (including selected topics in network security). Access control. Security in programming languages. Basic cryptography. Security protocols. Prerequisite(s): course 111 or permission of instructor. Enrollment restricted to School of Engineering majors. E. Miller, O. Arden, (F) The Staff "
"128. Distributed Systems: File Sharing, Online Gaming, and More. F,W","Covers topics in distributed computing including communication, naming, synchronization, consistency and replication, fault tolerance, and security. Examples drawn from peer-to-peer systems, online gaming, the World Wide Web; other systems also used to illustrate approaches to these topics. Students implement simple distributed systems over the course of the quarter. Prerequisite(s): course 101 or Computer Engineering 150. Course 111 or 105 recommended. The Staff, P. Alvaro, D. Long, E. Miller"
129. Data Storage Systems. *,"Covers all aspects of storage systems technology from magnetic media up through system software, including principles of magnetic recording, hard drive technology and evolution, performance measurement, file systems, storage networking, disk arrays, network-attached storage, and alternative storage technologies. Prerequisite(s): course 101, 111, and Physics 5A or 6A. E. Miller, D. Long, S. Brandt"
"130. Computational Models. F,W,S","Various representations for regular languages, context-free grammars, normal forms, simple parsing, pumping lemmas, Turing machines, the Church-Turing thesis, intractable problems, the P-NP question. Prerequisite(s): course 101. D. Bailey, P. Tantalo, M. Warmuth, S. Comandur, P. Kolaitis, D. Helmbold, A. Van Gelder"
132. Computability and Computational Complexity. S,"Turing machines, general phase-structure grammars, the Chomsky hierarchy, recursive functions, diagonalization, the Halting problem, computability and unsolvability, computational complexity, time and space bounds, NP-completeness with emphasis on reductions between problems from various areas. Prerequisite(s): course 130. D. Bailey, M. Warmuth, D. Helmbold, P. Kolaitis, A. Van Gelder"
132W. Computability and Computational Complexity (2 credits). W,"Disciplinary Communication (DC) course to be taken concurrently with course 132. Students satisfy the DC requirement by writing a survey paper on a topic related to computability and computational complexity. Possible topics include: an overview of a different model of computation (e.g., quantum computing); an overview of a major complexity class; a critical analysis of the Church-Turing thesis. Prerequisite(s): course 130; satisfaction of the Entry Level Writing and Composition requirements.Concurrent enrollment in course 132 required. Enrollment by permission of instructor. Enrollment limited to 15. D. Bailey, M. Warmuth, D. Helmbold, P. Kolaitis, A. Van Gelder"
"140. Artificial Intelligence. W,S","Introduction to the contemporary concepts and techniques of artificial intelligence, including any or all of: machine perception and inference, machine learning, optimization problems, computational methods and models of search, game playing and theorem proving. Emphasis may be on any formal method of perceiving, learning, reasoning, and problem solving which proves to be effective. This includes both symbolic and neural network approaches to artificial intelligence. Issues discussed include symbolic versus nonsymbolic methods, local versus global methods, hierarchical organization and control, and brain modeling versus engineering approaches. Lisp or Prolog may be introduced. Involves one major project or regular programming assignments. Prerequisite(s): course 101. The Staff, L. Getoor, M. Walker"
142. Machine Learning. F,"Introduction to machine learning algorithms and their applications. Topics include classification learning, density estimation and Bayesian learning regression, and online learning. Provides introduction to standard learning methods such as neural networks, decision trees, boosting, and nearest neighbor techniques. Prerequisite(s): course 101, Mathematics 23A, and Applied Mathematics and Statistics 131 or Computer Engineering 107. M. Warmuth, S. Chaturvedi, D. Helmbold"
143. Introduction to Natural Language Processing. W,"Introduces the theory and practice of natural language processing (NLP)-- the creation of computer programs that can understand, generate, and learn natural language. Introduces the three major subfields of NLP: syntax (the structure of a sentence); semantics (the explicit meaning of a single sentence); and pragmatics (the implicit meaning of a sentence when it is used in a specific discourse). Projects focus on the techniques useful for a particular application area, alternating in different years. Project application areas include information extraction, narrative understanding, sentiment analysis, dialogue systems, and question answering. Prerequisite(s): courses 5P and 101. M. Walker, The Staff"
144. Applied Machine Learning. W,"Provides a practical and project-oriented introduction to machine learning, with an emphasis on neural networks and deep learning. Starts with a discussion of the foundational pieces of statistical inference, then introduces the basic elements of machine learning: loss functions and gradient descent. Using these, presents logistic regression, or one-layer networks, and then moves on to more complex models: deep neural networks, convolutional networks for image recognition, and recurrent networks and LSTM for temporal and sequence data. Also covers the basics of dataset preparation and visualization and the performance characterization of the models created. Includes weekly homework and a final project that can be done in groups. Prerequisite(s): course 101. Enrollment is restricted to juniors and seniors. (General Education Code(s): SR.) N. Norouzi, L. De Alfaro"
153. Functional Programming. *,"An in-depth study of the functional style of programming and functional abstraction, including the study of applicative functors and monads, and monadic parsers. Prerequisite(s): course 101 or 109. Enrollment is restricted to junior and senior computer science majors. Enrollment limited to 75. C. Flanagan "
160. Introduction to Computer Graphics. F,"Introduces techniques of modeling, transformation, and rendering for computer-generated imagery. Topics: 2D/3D primitives, projections, matrix composition, and shading algorithms. Programming assignments and major project required. Students cannot receive credit for both this course and course 260 in quarters when they are offered concurrently. Mastery of materials in the prerequisite courses will be verified with a quiz or assignment during the first two weeks of the course. Prerequisite(s): course 101 and Mathematics 21 or Applied Mathematics and Statistics 10. Concurrent enrollment in course 160L is required. J. Davis, A. Pang"
160L. Introduction to Computer Graphics Laboratory (2 credits). F,"Complements course 160, gaining additional competence with a number of important software development tools, graphics libraries, and graphical user interfaces. Topics include OpenGL, WebGL, rubberbanding, picking, sliders, buttons, dialog, event handling, double buffering, lighting, shading, materials, and textures. The topic list may be updated to reflect technological changes. Concurrent enrollment in course 160 is required. J. Davis, A. Pang"
161. Introduction to Data Visualization. W,"Concepts and methods for data analysis, information and scientific visualization, and effective communication of technical data. Topics include: mathematical foundations; scalar, vector, and tensor field visualization; multivariate visualization; and tree and graph visualizations. Applications are drawn from social-network analysis; environmental and space science; and medical imaging. Evaluation based on examinations, programming exercises, and a project. Prerequisite(s): course 160 or equivalent. Concurrent enrollment in course 161L is required. S. Lodha, A. Pang"
161L. Data Visualization Laboratory (2 credits). W,"Complements course 161. Students gain additional competence with a number of important software development tools and techniques. Included are Paraview, Visualization Toolkit (VTK), and Insight Toolkit (ITK). Students get hands-on experience with designing transfer functions, isosurfacing, direct volume rendering, vector-field visualization techniques, as well as methods for dealing with non-spatial data. Concurrent enrollment in course 161 is required. S. Lodha, A. Pang"
162. Advanced Computer Graphics and Animation. *,"Covers concepts and methods for modeling and rendering static and dynamic scenes Topics include: mathematical foundations (e.g., splines and numerical integration; global illumination models; texture mapping; morphing; physically based animation; behavioral animations; and procedural animations. Evaluation based on examinations, programming exercises, and a project. Prerequisite(s): course 160 or equivalent. Concurrent enrollment in course 162L is required. J. Davis, A. Pang"
162L. Advanced Computer Graphics and Animation Laboratory (2 credits). *,"Complements course 162. Students gain additional competence in a hands-on computational laboratory setting. Representative examples include topics, such as interactive curve and surface design; shaders for advanced effects; crowd and behavioral animation; experiments with particle systems; facial animation; and motion and planning. Prerequisite(s): concurrent enrollment in course 162 is required. J. Davis, A. Pang"
165. Data Programming for Visualization. *,"Presents the basics of open-source programming tools to perform data analysis and create interactive visualizations and maps for the web, data integrity and scraping, statistical computation, simple and novel visualizations, and geomapping. The examples are drawn from social science, public policy, and data journalism. Prerequisite(s): course 101. S. Lodha "
166A. Game Theory and Applications I. F,"Introduces modern game theory, including applications in social science, biology, and engineering. Topics include extensive form, strategic form, mixed strategies, incomplete information, repeated games, evolutionary games, and simulation techniques. (Also offered as Technology &amp; Info Management 166A. Students cannot receive credit for both courses.) Prerequisite(s): Applied Math and Statistics 5 or 7 or Economics 113; and Economics 11B, Applied Math and Statistics 11B, or Mathematics 11B or 19B. Enrollment is restricted to juniors and seniors. Enrollment limited to 100. J. Musacchio "
166B. Game Theory and Applications II.,"Explores research frontiers in game theory, emphasizing applications in social science, biology, and engineering. Each interdisciplinary team develops a topic, and presents it to the class in oral and written reports and demonstrations. Students must have shown a strong performance in course 166A or equivalent. Students cannot receive credit for this course and Economics 272, Computer Science 272, or Biology: Ecology and Evolutionary 274. (Also offered as Economics 166B. Students cannot receive credit for both courses.) Prerequisite(s): course 166A or Economics 166A; satisfaction of the Entry Level Writing and Composition requirements. Enrollment is restricted to juniors and seniors. Enrollment limited to 40. The Staff "
"168. Introduction to Augmented Reality and Virtual Reality (7 credits). F,S","Covers the concepts and methods needed to develop augmented reality (AR) and virtual reality (VR) applications. Topics include 3D modeling, graphics rendering, image compositing, occlusion handling, sensors, computer vision and image analysis, toolkits for AR, different display options, dynamics, interaction, and navigation. Prerequisite(s): course 160/L. Some knowledge of mobile platforms (e.g., CMPS 121 or CMPE 161) is helpful, but not required. Enrollment is by instructor permission. Enrollment is restricted to juniors and seniors. Enrollment limited to 30. J. Davis, A. Pang"
"180. Database Systems I. F,W","Introduction to the concepts, approaches, tools, and methodology of database design. Covers the entity-relationship model, the relational model, relational algebra, relational calculus, commercial languages (such as SQL and QBE), functional dependencies, normal forms, and design theory. Other topics may include knowledge-bases, constraint databases, and alternative database models. Prerequisite(s): course 101. The Staff, S. Finkelstein, P. Kolaitis"
180W. Database Systems (2 credits). *,"Disciplinary Communication (DC) course to be taken concurrently with course 180. Students satisfy the DC requirement by producing a database design document, a document with comments on the source code for complex queries, and a literature survey or systems survey. Prerequisite(s): course 101, or permission of instructor; satisfaction of the Entry Level Writing and Composition requirements. Concurrent enrollment in course 180 is required. Enrollment limited to 15. P. Kolaitis "
181. Database Systems II. S,"Introduction to the architecture and implementation of database systems. Topics covered include data storage, tree and hash indexes, storage management, query evaluation and optimization, transaction management, concurrency control, recovery, and XML data management. Prerequisite(s): course 180. S. Finkelstein, The Staff"
182. Introduction to Database Management Systems. S,"Concepts, approaches, tools, and methodology of database design. Topics include the entity-relationship model; the relational data model; normal forms; commercial languages such as SQL (SQL constraints, SQL triggers, and update languages); query-by-example (QBE); XML data model, and XML query language (XQuery); as well as relational database-management support for XML and object-relational features in database-management systems. Involves a database -application development project. Prerequisite(s): course 12B. Course intended for non-majors; computer science majors should enroll in course 180. S. Finkelstein, The Staff"
"183. Web Applications. F,S","The World-Wde Web is one of the main mechanisms by which computer applications are delivered to users. This course introduces the design of Web applications. Students learn the main technologies involved, and build web applications as part of homework assignments and group class projects.(Formerly Hypermedia and the Web.) Prerequisite(s): courses 12B and 12M. (General Education Code(s): PR-E.) The Staff, R. Jullig, L. De Alfaro, J. Whitehead"
184. Data Wrangling and Web Scraping. S,"Python basics; data extraction from CSV, JSON, XML, Excel, PDF, encoded text files; data cleaning, finding duplicates, missing data, fuzzy matching; data exploration, joining, aggregating, separating, correlation, clustering; web scraping, APIs, scraping data from social media, open data network. Prerequisite(s): course 101. Enrollment limited to 50. S. Lodha "
"185. Technical Writing and Communication in Computer Science. F,S","Writing and communication by computer science professionals to a technical audience. Geared toward students planning to pursue an advanced degree in computer science. Assignments include: cover letter and resume for job application, statement of purpose for graduate school application, algorithm description and analysis, user documentation, proposal preparation, critical analysis of published papers, survey of the literature, term paper, and oral presentations. Prerequisite(s): course 101, one additional upper-division Computer Science course, and satisfaction of the Entry Level Writing and Composition requirements. Enrollment is restricted to computer science majors, or by permission of the instructor. May be repeated for credit. P. Kolaitis, The Staff"
191. Computer Science and Technology Seminar (2 credits). *,"Weekly talks by industry experts, university researchers, field practitioners, and video presentations provide an in-depth exposure to a specific or a broad area of computer science and technology. Topics include emerging ideas, opportunities, challenges, and future of the industry. May be repeated for credit. The Staff, M. Walker, J. Davis, S. Lodha"
192. Supervised Student Teaching/Tutoring. *,"Students hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. D. Helmbold "
192F. Supervised Student Teaching/Tutoring (2 credits). *,"Students hold tutoring hours, run a lab, or lead discussion section in conjunction with a regularly offered course and under close supervision by the course's instructor. Weekly meetings with a regular faculty member to discuss teaching techniques, pedagogy, sensitivity to students' needs, maintaining a comfortable learning environment, and strategies for handling difficult situations. Students submit a report on their teaching experience. Enrollment by permission of instructor and restricted to sophomores, juniors, and seniors. D. Helmbold "
"193. Field Study. F,W,S","Provides for individual programs of study with specific academic objectives carried out under the direction of a member of the Computer Science Department and using resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives, usually a term paper or project. Cannot normally be repeated for credit. Students submit petition to sponsoring agency. The Staff "
"193F. Field Study (2 credits). F,W,S",Provides for individual programs of study with specific academic objectives carried out under the direction of a faculty member of the Computer Science Department and a willing sponsor at the field site. Uses resources not normally available on campus. Credit is based on the presentation of evidence of achieving the objectives by submitting a written and oral presentation. Cannot normally be repeated for credit. Intended for students majoring in computer science. Students submit petition to sponsoring agency. The Staff 
"194. Group Tutorial. F,W,S",A program of independent study arranged between a group of students and a faculty member. Students submit petition to sponsoring agency. May be repeated for credit. The Staff 
"194F. Group Tutorial (2 credits). F,W,S",A program of independent study arranged between a group of students and a faculty member. Intended for students majoring in computer science. Students submit petition to sponsoring agency. May be repeated for credit. The Staff 
"195. Senior Thesis Research. F,W,S",Students submit petition to sponsoring agency. Prerequisite(s): satisfaction of the Entry Level Writing and Composition requirements. The Staff 
"195F. Senior Thesis Research (2 credits). F,W,S",Intended for majors. Students submit petition to sponsoring agency. The Staff 
"198. Individual Study or Research. F,W,S",Students submit petition to sponsoring agency. May be repeated for credit. The Staff 
"198F. Individual Study or Research (2 credits). F,W,S",Intended for majors. Students submit petition to sponsoring agency. May be repeated for credit. The Staff 
"199. Tutorial. F,W,S",For fourth-year students majoring in computer science. Students submit petition to sponsoring agency. May be repeated for credit. The Staff 
"199F. Tutorial (2 credits). F,W,S",For fourth-year students majoring in computer science. Students submit petition to sponsoring agency. May be repeated for credit. The Staff
